var N = null;var searchIndex = {};
searchIndex["dynomite"]={"doc":"Dynomite is set of high-level interfaces built on top of rusoto_dynamodb which make interacting with AWS DynamoDB more productive.","items":[[0,"error","dynomite","Dynomite error types",N,N],[4,"AttributeError","dynomite::error","Errors that may result of attribute value conversions",N,N],[13,"InvalidFormat","","Will be returned if an AttributeValue is present, and is of the expected type but its contents are not well-formatted",0,N],[13,"InvalidType","","Will be returned if provided AttributeValue is not of the expected type",0,N],[13,"MissingField","","Will be returned if provided attributes does not included an expected named value",0,N],[12,"name","dynomite::error::AttributeError","Name of the field that is missing",0,N],[0,"retry","dynomite","Retry functionality",N,N],[3,"RetryingDynamoDb","dynomite::retry","A type which implements `DynamoDb` and retries all operations that are retryable",N,N],[4,"Policy","","Preconfigured retry policies for failable operations",N,N],[13,"Limit","","Limited number of times to retry",1,N],[13,"Pause","","Limited number of times to retry with fixed pause between retries",1,N],[13,"Exponential","","Limited number of times to retry with an expoential pause between retries",1,N],[8,"Retries","","An interface for adapting a `DynamoDb` impl to a `RetryingDynamoDb` impl",N,N],[10,"with_retries","","Consumes a `DynamoDb` impl and produces a `DynamoDb` which retries its operations when appropriate",2,[[["self"],["policy"]],["retryingdynamodb"]]],[11,"new","","Return a new instance with a configured retry policy",3,[[["d"],["policy"]],["self"]]],[6,"Attributes","dynomite","Type alias for map of named attribute values",N,N],[8,"DynamoDbExt","","Extension methods for DynamoDb client types",N,N],[10,"list_backups_pages","","An auto-paginating `Stream` oriented version of `list_backups`",4,[[["self"],["listbackupsinput"]],["box",["stream"]]]],[10,"list_tables_pages","","An auto-paginating `Stream` oriented version of `list_tables`",4,[[["self"],["listtablesinput"]],["box",["stream"]]]],[10,"query_pages","","An auto-paginating `Stream` oriented version of `query`",4,[[["self"],["queryinput"]],["box",["stream"]]]],[10,"scan_pages","","An auto-paginating `Stream` oriented version of `scan`",4,[[["self"],["scaninput"]],["box",["stream"]]]],[8,"Item","","A type which can be converted to and from a set of String keys and `AttributeValues`.",N,N],[10,"key","","Returns the set of attributes which make up this item's primary key",5,[[["self"]],["attributes"]]],[8,"Attribute","","A type capable of being converted into an or from and AWS `AttributeValue`",N,N],[10,"into_attr","","Returns a conversion into an `AttributeValue`",6,[[["self"]],["attributevalue"]]],[10,"from_attr","","Returns a fallible conversion from an `AttributeValue`",6,[[["attributevalue"]],["result",["attributeerror"]]]],[8,"FromAttributes","","A type capable of being produced from a set of string keys and `AttributeValues`",N,N],[10,"from_attrs","","Returns an instance of of a type resolved at runtime from a collection of a `String` keys and `AttributeValues`. If a instance can not be resolved and `AttributeError` will be returned.",7,[[["attributes"]],["result",["attributeerror"]]]],[14,"attr_map","","Creates a `HashMap<String, AttributeValue>` from a list of key-value pairs",N,N],[11,"into","dynomite::error","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"as_fail","","",0,[[["self"]],["fail"]]],[11,"with_retries","dynomite::retry","",3,[[["self"],["policy"]],["retryingdynamodb"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","","",1,[[["self"]],["strategy"]]],[11,"default","","",1,[[],["self"]]],[11,"eq","dynomite::error","",0,[[["self"],["attributeerror"]],["bool"]]],[11,"ne","","",0,[[["self"],["attributeerror"]],["bool"]]],[11,"eq","dynomite::retry","",1,[[["self"],["policy"]],["bool"]]],[11,"ne","","",1,[[["self"],["policy"]],["bool"]]],[11,"clone","","",1,[[["self"]],["policy"]]],[11,"clone","","",3,[[["self"]],["retryingdynamodb"]]],[11,"fmt","dynomite::error","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","dynomite::retry","",1,[[["self"],["formatter"]],["result"]]],[11,"batch_get_item","","",3,[[["self"],["batchgetiteminput"]],["rusotofuture",["batchgetitemoutput","batchgetitemerror"]]]],[11,"batch_write_item","","",3,[[["self"],["batchwriteiteminput"]],["rusotofuture",["batchwriteitemoutput","batchwriteitemerror"]]]],[11,"create_backup","","",3,[[["self"],["createbackupinput"]],["rusotofuture",["createbackupoutput","createbackuperror"]]]],[11,"create_global_table","","",3,[[["self"],["createglobaltableinput"]],["rusotofuture",["createglobaltableoutput","createglobaltableerror"]]]],[11,"create_table","","",3,[[["self"],["createtableinput"]],["rusotofuture",["createtableoutput","createtableerror"]]]],[11,"delete_backup","","",3,[[["self"],["deletebackupinput"]],["rusotofuture",["deletebackupoutput","deletebackuperror"]]]],[11,"delete_item","","",3,[[["self"],["deleteiteminput"]],["rusotofuture",["deleteitemoutput","deleteitemerror"]]]],[11,"delete_table","","",3,[[["self"],["deletetableinput"]],["rusotofuture",["deletetableoutput","deletetableerror"]]]],[11,"describe_backup","","",3,[[["self"],["describebackupinput"]],["rusotofuture",["describebackupoutput","describebackuperror"]]]],[11,"describe_continuous_backups","","",3,[[["self"],["describecontinuousbackupsinput"]],["rusotofuture",["describecontinuousbackupsoutput","describecontinuousbackupserror"]]]],[11,"describe_global_table","","",3,[[["self"],["describeglobaltableinput"]],["rusotofuture",["describeglobaltableoutput","describeglobaltableerror"]]]],[11,"describe_global_table_settings","","",3,[[["self"],["describeglobaltablesettingsinput"]],["rusotofuture",["describeglobaltablesettingsoutput","describeglobaltablesettingserror"]]]],[11,"describe_limits","","",3,[[["self"]],["rusotofuture",["describelimitsoutput","describelimitserror"]]]],[11,"describe_table","","",3,[[["self"],["describetableinput"]],["rusotofuture",["describetableoutput","describetableerror"]]]],[11,"describe_time_to_live","","",3,[[["self"],["describetimetoliveinput"]],["rusotofuture",["describetimetoliveoutput","describetimetoliveerror"]]]],[11,"get_item","","",3,[[["self"],["getiteminput"]],["rusotofuture",["getitemoutput","getitemerror"]]]],[11,"list_backups","","",3,[[["self"],["listbackupsinput"]],["rusotofuture",["listbackupsoutput","listbackupserror"]]]],[11,"list_global_tables","","",3,[[["self"],["listglobaltablesinput"]],["rusotofuture",["listglobaltablesoutput","listglobaltableserror"]]]],[11,"list_tables","","",3,[[["self"],["listtablesinput"]],["rusotofuture",["listtablesoutput","listtableserror"]]]],[11,"list_tags_of_resource","","",3,[[["self"],["listtagsofresourceinput"]],["rusotofuture",["listtagsofresourceoutput","listtagsofresourceerror"]]]],[11,"put_item","","",3,[[["self"],["putiteminput"]],["rusotofuture",["putitemoutput","putitemerror"]]]],[11,"query","","",3,[[["self"],["queryinput"]],["rusotofuture",["queryoutput","queryerror"]]]],[11,"restore_table_from_backup","","",3,[[["self"],["restoretablefrombackupinput"]],["rusotofuture",["restoretablefrombackupoutput","restoretablefrombackuperror"]]]],[11,"restore_table_to_point_in_time","","",3,[[["self"],["restoretabletopointintimeinput"]],["rusotofuture",["restoretabletopointintimeoutput","restoretabletopointintimeerror"]]]],[11,"scan","","",3,[[["self"],["scaninput"]],["rusotofuture",["scanoutput","scanerror"]]]],[11,"tag_resource","","",3,[[["self"],["tagresourceinput"]],["rusotofuture",["tagresourceerror"]]]],[11,"untag_resource","","",3,[[["self"],["untagresourceinput"]],["rusotofuture",["untagresourceerror"]]]],[11,"update_continuous_backups","","",3,[[["self"],["updatecontinuousbackupsinput"]],["rusotofuture",["updatecontinuousbackupsoutput","updatecontinuousbackupserror"]]]],[11,"update_global_table","","",3,[[["self"],["updateglobaltableinput"]],["rusotofuture",["updateglobaltableoutput","updateglobaltableerror"]]]],[11,"update_global_table_settings","","",3,[[["self"],["updateglobaltablesettingsinput"]],["rusotofuture",["updateglobaltablesettingsoutput","updateglobaltablesettingserror"]]]],[11,"update_item","","",3,[[["self"],["updateiteminput"]],["rusotofuture",["updateitemoutput","updateitemerror"]]]],[11,"update_table","","",3,[[["self"],["updatetableinput"]],["rusotofuture",["updatetableoutput","updatetableerror"]]]],[11,"update_time_to_live","","",3,[[["self"],["updatetimetoliveinput"]],["rusotofuture",["updatetimetoliveoutput","updatetimetoliveerror"]]]],[11,"name","dynomite::error","",0,[[["self"]],["option",["str"]]]],[11,"cause","","",0,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",0,[[["self"]],["option",["backtrace"]]]]],"paths":[[4,"AttributeError"],[4,"Policy"],[8,"Retries"],[3,"RetryingDynamoDb"],[8,"DynamoDbExt"],[8,"Item"],[8,"Attribute"],[8,"FromAttributes"]]};
searchIndex["dynomite_derive"]={"doc":"Dynomite-derive provides procedural macros for deriving dynomite types for your structs","items":[[24,"Item","dynomite_derive","Derives `dynomite::Item` type for struts with named fields",N,N],[24,"Attribute","","Derives `dynomite::Attribute` for enum types",N,N]],"paths":[]};
initSearch(searchIndex);
